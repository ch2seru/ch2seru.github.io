{"version":3,"file":"static/js/616.c94a9fca.chunk.js","mappings":"gJASA,IAAIA,EAAQ,IAAIC,MAAM,KAAMC,KAAK,GAwCjC,QAtCA,SAAyBC,GAErB,IAAKC,EAAOC,IAAWC,EAAAA,EAAAA,UAAS,KAC3BC,EAAWC,IAAmBC,EAAAA,EAAAA,kBAC9BC,EAAQC,IAAYL,EAAAA,EAAAA,UAAS,IAElC,OADaM,EAAAA,EAAAA,kBAAiBF,IAE9BG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EAEtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,SAAOC,SAAYC,IACfV,GAAgB,KACZH,EAAQa,EAAEC,OAAOC,MAAM,GACzB,IAGFb,EAAY,UACZP,EAAMqB,KAAI,KACCL,EAAAA,EAAAA,KAAA,OAAAD,SAAOX,OAGtBY,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,SAAOC,SAAYC,IACfV,GAAgB,KACZG,EAASO,EAAEC,OAAOC,MAAM,GAC1B,IAGFb,EAAY,UACZP,EAAMqB,KAAI,KACCL,EAAAA,EAAAA,KAAA,OAAAD,SAAOL,QAK9B,C","sources":["routes/ExUseTransition.js"],"sourcesContent":["import { useState, useTransition, useDeferredValue } from \"react\";\r\n// 1.일관된 batching\r\n// setCount(1) \r\n// setName(2) \r\n// setValue(3)   //여기서 1번만 재렌더링됨\r\n// state변경함수를 연달아서 3개 사용하면 재렌더링도 원래 3번 되어야하지만 \r\n// 리액트는 똑똑하게도 재렌더링을 마지막에 1회만 처리해줍니다. \r\n\r\n// 2. useTransition - 느린컴포넌트 성능향상가능\r\nlet empty = new Array(5000).fill(0)//성능 테스트를 위해 만듬(0이 만개 Array생성)\r\n\r\nfunction ExUseTransition(props){\r\n    \r\n    let [name , setName] = useState('')\r\n    let [isPending, startTransition] = useTransition()\r\n    let [name2 , setName2] = useState('')\r\n    let state1 = useDeferredValue(name2)\r\n    return(\r\n    <div className=\"container\">\r\n      \r\n        <h1>ExUseTransition</h1>\r\n        <input onChange={ (e)=>{\r\n            startTransition(()=>{\r\n                setName(e.target.value)\r\n            })\r\n        }}></input>\r\n        {\r\n            isPending ? \"Loading\" :\r\n            empty.map(()=>{\r\n                return <div>{ name }</div>\r\n            })\r\n        }\r\n        <h1>useDeferredValue</h1>\r\n        <input onChange={ (e)=>{\r\n            startTransition(()=>{\r\n                setName2(e.target.value)\r\n            })\r\n        }}></input>\r\n        {\r\n            isPending ? \"Loading\" :\r\n            empty.map(()=>{\r\n                return <div>{ name2 }</div>\r\n            })\r\n        }\r\n    </div> \r\n    )\r\n}\r\n\r\n\r\nexport default ExUseTransition;"],"names":["empty","Array","fill","props","name","setName","useState","isPending","startTransition","useTransition","name2","setName2","useDeferredValue","_jsxs","className","children","_jsx","onChange","e","target","value","map"],"sourceRoot":""}