{"version":3,"file":"static/js/236.d6a19863.chunk.js","mappings":"gJAMA,IAAIA,GAAQC,EAAAA,EAAAA,OAAK,WAEf,OADAC,QAAQC,IAAI,mCACLC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,SACd,IA2BA,QAjBA,SAAgBC,GAEZ,IAAKC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,GAMjC,OAFiBC,EAAAA,EAAAA,UAAQ,IAd7B,WACE,IAAI,IAAIC,EAAE,EAAEA,EAAE,IAAUA,KAGxBT,QAAQC,IAAI,eACd,CAS0CS,IAAQ,CAACL,KAG/CM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWT,SAAA,EACtBD,EAAAA,EAAAA,KAACJ,EAAK,CAACO,MAAQA,KACfH,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBAGZ,C","sources":["routes/ExMemo.js"],"sourcesContent":["import { memo, useMemo, useState } from \"react\";\r\n\r\n//memo - 필요할때만 재랜더링\r\n//props가 변할 때만 재렌더링해줌\r\n//기존props 와 신규props 와 비교하여 재랜덩링->rpops가 길고 복잡하면 손해일수도\r\n//자주 사용안함 \r\nlet Child = memo(function Child(){\r\n  console.log(\"재랜덩링됨\")\r\n  return <div>Child</div>\r\n})\r\n\r\nfunction test(){\r\n  for(let i=0;i<10000000; i++){\r\n\r\n  }\r\n  console.log(\"test 1000000\")\r\n}\r\n\r\n\r\nfunction ExMemo(props){\r\n\r\n    let [count, setCount] = useState(0)\r\n    \r\n        //useMomo 컴포넌트 렌더링시 1회만 실행\r\n        //useEffect 와 사용법 유사 \r\n        let result = useMemo(()=> {return test()},[count])\r\n   \r\n    return(\r\n    <div className=\"container\">\r\n        <Child count ={count}></Child>  \r\n        <h1>meme, useMemo</h1>\r\n    </div> \r\n    )\r\n}\r\n\r\n\r\nexport default ExMemo;"],"names":["Child","memo","console","log","_jsx","children","props","count","setCount","useState","useMemo","i","test","_jsxs","className"],"sourceRoot":""}